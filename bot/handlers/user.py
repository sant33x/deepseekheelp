from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from aiogram.filters import Command
from datetime import datetime
from sqlalchemy import func

from bot.database.models import get_session, User, Profit
from bot.utils.config import Config
from bot.utils.roles import UserRole
from bot.keyboards.main_menu import main_menu_kb, profile_kb, info_kb
from bot.handlers.registration import check_user_access

router = Router()

@router.message(Command("start"))
async def start_handler(message: Message):
    if not await check_user_access(message.from_user.id):
        return
    
    with get_session() as session:
        user = session.query(User).filter_by(user_id=message.from_user.id).first()
        if not user:
            return await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
        
        if user.status == UserRole.PENDING:
            return await message.answer("‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏. –û–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è.")
        
        if user.status == UserRole.REJECTED:
            return await message.answer("‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
    
    await message.answer_photo(
        photo=FSInputFile(Config.MENU_PHOTO_PATH),
        caption="üöÄ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_menu_kb(message.from_user.id)
    )

@router.message(F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def profile_handler(message: Message):
    if not await check_user_access(message.from_user.id):
        return
    
    with get_session() as session:
        user = session.query(User).filter_by(user_id=message.from_user.id).first()
        if not user:
            return await message.answer("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        total_profit = session.query(func.sum(Profit.amount)).filter_by(user_id=user.id).scalar() or 0
        days_with_us = (datetime.now() - user.registration_date).days
        
        text = (
            f"üë§ *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\n"
            f"üÜî ID: {user.user_id}\n"
            f"üìõ –°—Ç–∞—Ç—É—Å: {user.status}\n"
            f"üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_profit} RUB\n"
            f"üìÖ –° –Ω–∞–º–∏: {days_with_us} –¥–Ω–µ–π"
        )
        
        await message.answer_photo(
            photo=FSInputFile(Config.PHOTO_PATH),
            caption=text,
            reply_markup=profile_kb()
        )

@router.message(F.text == "üìã –ú–µ–Ω—é")
async def menu_handler(message: Message):
    if not await check_user_access(message.from_user.id):
        return
    
    with get_session() as session:
        total_profit = session.query(func.sum(Profit.amount)).scalar() or 0
        profit_count = session.query(Profit).count()
        
        text = (
            "üè¶ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏—Ç–∞—Ö*\n\n"
            f"‚îè –û–±—â–∞—è —Å—É–º–º–∞: {total_profit} RUB\n"
            f"‚îó –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {profit_count}\n\n"
            "üë§ *–ü—Ä–æ—Ü–µ–Ω—Ç—ã –≤–æ—Ä–∫–µ—Ä–∞*\n"
            "‚î£ –¢–µ—Å—Ç - 80%\n"
            "‚î£ –¢–µ—Å—Ç - 75%\n"
            "‚î£ –¢–µ—Å—Ç - 65%\n"
            "‚î£ –¢–µ—Å—Ç - 60%\n"
            "‚îó –¢–µ—Å—Ç - 15%\n\n"
            "üìë *–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã*\n"
            "‚î£ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 1 | Worküìó\n"
            "‚î£ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 2 | Worküìó\n"
            "‚î£ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 3 | Worküìó\n"
            "‚î£ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 4 | Worküìó\n"
            "‚îó –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 5 | Worküìó"
        )
        
        await message.answer_photo(
            photo=FSInputFile(Config.MENU_PHOTO_PATH),
            caption=text,
            reply_markup=info_kb()
        )

@router.message(F.text == "üì∞ –ù–æ–≤–æ—Å—Ç–∏")
async def news_handler(message: Message):
    if not await check_user_access(message.from_user.id):
        return
    await message.answer("üì¢ –ù–∞—à–∏ –Ω–æ–≤–æ—Å—Ç–∏: https://exclabs.pro/")

@router.message(F.text == "üí∏ –ö–∞–Ω–∞–ª –ø—Ä–æ—Ñ–∏—Ç–æ–≤")
async def profits_handler(message: Message):
    if not await check_user_access(message.from_user.id):
        return
    await message.answer("üí∞ –ö–∞–Ω–∞–ª –ø—Ä–æ—Ñ–∏—Ç–æ–≤: https://exclabs.pro/")

@router.message(F.text == "üí¨ –ß–∞—Ç –≤–æ—Ä–∫–µ—Ä–æ–≤")
async def workers_chat_handler(message: Message):
    if not await check_user_access(message.from_user.id):
        return
    await message.answer("üí¨ –ß–∞—Ç –≤–æ—Ä–∫–µ—Ä–æ–≤: https://exclabs.pro/")

@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_handler(message: Message, state: FSMContext):
    if not await check_user_access(message.from_user.id):
        return
    
    await state.clear()
    await message.answer_photo(
        photo=FSInputFile(Config.MENU_PHOTO_PATH),
        caption="üöÄ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_menu_kb(message.from_user.id)
    )